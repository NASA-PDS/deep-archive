[metadata]
name = pds.deeparchive
author = PDS
author_email = pds_operator@jpl.nasa.gov
description = PDS Deep Archive software for generating OAIS AIPs and SIPs for PDS4 Archives
long_description = file: README.md
long_description_content_type = text/markdown
license = apache-2.0
keywords = PDS, CCSDS, OAIS, AIP, SIP, metadata, submission, archive, package
url = https://github.com/NASA-PDS/pds-deep-archive
download_url = https://github.com/NASA-PDS/pds-deep-archive/releases/
classifiers =
    Development Status :: 5 - Production/Stable
    Environment :: Console
    Intended Audience :: Science/Research
    License :: Other/Proprietary License
    Natural Language :: English
    Operating System :: OS Independent
    Programming Language :: Python :: 3 :: Only
    Topic :: Scientific/Engineering


[options]
install_requires =
    setuptools
    lxml
    zope.component
    zope.interface
    pds.api-client==0.5.0
# It sucks we can't use the "pds" namespace and have to use "pds2".
# See https://github.com/NASA-PDS/pds-api-client/issues/7 for why.
namespace_packages = pds2
zip_safe = True
include_package_data = True
package_dir =
    = src
packages = find_namespace:
python_requires = >= 3.9
test_suite = pds2.aipgen.tests.test_suite


[options.packages.find]
where = src
exclude = test


[options.package_data]
* = *.txt


[options.data_files]
# None


[options.entry_points]
console_scripts =
    sipgen = pds2.aipgen.sip:main
    aipgen = pds2.aipgen.aip:main
    pds-deep-archive = pds2.aipgen.main:main
    pds-deep-registry-archive = pds2.aipgen.registry:mai


[options.extras_require]
dev =
    black
    flake8
    flake8-bugbear
    flake8-docstrings
    pep8-naming
    mypy
    pydocstyle
    coverage
    pytest
    pytest-cov
    pytest-watch
    pytest-xdist
    pre-commit
    sphinx
    sphinx-rtd-theme
    tox
    sphinx-rtd-theme==0.5.0
    sphinx-argparse==0.2.5
    mypy-zope==0.3.2
    types-pkg_resources
    lxml-stubs


[coverage:run]
omit = */_version.py,*/__init__.py


[test]


[install]


[tool:pytest]
addopts = -n auto --cov=pds


[flake8]
max-line-length = 120
extend-exclude = versioneer.py,_version.py,docs,tests,setup.py
docstring_convention = google

# Ignoring:
# E203 prevents flake8 from complaining about whitespace around slice
# components. Black formats per PEP8 and flake8 doesn't like some of
# this.
#
# E501 prevents flake8 from complaining line lengths > 79. We will use
# flake8-bugbear's B950 to handle line length lint errors. This trips
# when a line is > max-line-length + 10%.
#
# W503 is ignored for ``pds-doi-service`` not just because it makes use of
# left-aligned binary operators in multi-line expressions, but because the
# opposite advice is now the recommended practice; see
# • https://rhodesmill.org/brandon/slides/2012-11-pyconca/#laying-down-the-law
# • https://github.com/PyCQA/pycodestyle/pull/502
# • https://www.flake8rules.com/rules/W503.html
# • ET Tufte, _Seeing with Fresh Eyes: Meaning, Space, Data, Truth_, Graphics
#   Press 2020, p.14.
extend-ignore = E203, E501, W503

# Selects following test categories:
# D: Docstring errors and warnings
# E, W: PEP8 errors and warnings
# F: PyFlakes codes
# N: PEP8 Naming plugin codes
# B: flake8-bugbear codes
# B***: Specific flake8-bugbear opinionated warnings to trigger
#   B902: Invalid first argument used for method. Use self for instance
#       methods, and cls for class methods
#   B903: Use collections.namedtuple (or typing.NamedTuple) for data classes
#       that only set attributes in an __init__ method, and do nothing else.
#   B950: Line too long. This is a pragmatic equivalent of pycodestyle's
#       E501: it considers "max-line-length" but only triggers when the value
#       has been exceeded by more than 10%.
select = D,E,F,N,W,B,B902,B903,B950


[mypy]
namespace_packages = True
plugins = mypy_zope:plugin
